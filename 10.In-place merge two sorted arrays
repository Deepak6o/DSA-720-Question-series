//In-place merge two sorted arrays
#include<iostream>
#include<algorithm>
using namespace std;

void printarr(int size, int arr[]){
    for(int i = 0; i < size; i++){
        cout << arr[i] << " ";
    }
    cout << endl;
}

void InPlaceMerge(int m, int n, int x[], int y[]){
    int i = 0, j = 0, k = 0;
    int size = m + n;
    int arr[size];

    // Merge both arrays into a temporary array
    while (i < m && j < n) {
        if (x[i] < y[j]) {
            arr[k++] = x[i++];
        } else {
            arr[k++] = y[j++];
        }
    }

    // Copy remaining elements of x[]
    while (i < m) {
        arr[k++] = x[i++];
    }

    // Copy remaining elements of y[]
    while (j < n) {
        arr[k++] = y[j++];
    }

    // Copy back the merged elements into the original arrays
    for (i = 0; i < m; i++) {
        x[i] = arr[i];
    }
    for (i = 0; i < n; i++) {
        y[i] = arr[m + i];
    }

    // Print the merged arrays
    printarr(m, x);
    printarr(n, y);
}

int main() {
    int x[] = { 1, 4, 7, 8, 10 };
    int y[] = { 2, 3, 9 };
    int m = sizeof(x)/sizeof(x[0]);
    int n = sizeof(y)/sizeof(y[0]);
    
    InPlaceMerge(m, n, x, y);

    return 0;
}
