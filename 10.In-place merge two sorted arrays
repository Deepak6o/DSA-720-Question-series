// In-place merge two sorted arrays
#include<iostream>
#include<algorithm>
using namespace std;

void Print(int size, int arr[]){
    for(int i=0;i<size;i++){
        cout<< arr[i]<< " ";
    }
}

void Inplace(int m, int n, int arr[], int brr[]){
    for(int i=0;i<m;i++)
    {
        if(arr[i]>brr[0]){
            swap(arr[i],brr[0]);
            int first = brr[0];
            int k;
            for(k=1;k<n && brr[k]<first; k++){
                brr[k-1]=brr[k];
            }
            brr[k-1]=first;
        }
    }
}

// void INPLACE(int n, int m, int arr[], int brr[]){
//     int extra[n+m];
//     int i=0;
//     int j=0;
//     int k=0;
//     while(i<n && j<m){
//         if(arr[i]<brr[j]){
//             extra[k++]=arr[i++];
//         }
//         else{
//             extra[k++]=brr[j++];
//         }
//     }
//     while(i<n){
//         extra[k++]=arr[i++];
//     }
//     while(j<m){
//         extra[k++]=brr[j++];
//     }

    
//     for(int x=0;x<n;x++){
//         cout<<extra[x]<<" ";
//     }
//     cout<<endl;
//     for(int x=n;x<n+m;x++){
//         cout<<extra[x]<< " ";
//     }
// }
int main(){
    int arr[] = {1, 4, 7, 8, 10};
    int brr[] = {2, 3, 9 };
    int m = sizeof(arr)/sizeof(arr[0]);
    int n = sizeof(brr)/sizeof(brr[0]);
    Inplace(m,n,arr,brr);
    cout<<" arr[] = ";
    Print(m,arr);
    cout<<endl;
    cout<<" brr[] = ";
    Print(n,brr);
}
